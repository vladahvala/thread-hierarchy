/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example;

import org.junit.Test;
import static org.junit.Assert.*;

import java.io.ByteArrayOutputStream;
import java.io.PrintStream;

public class MainTest {
    @Test
    public void testThreadsStartAndFinish() throws InterruptedException {
        ThreadGroup group = new ThreadGroup("TestGroup");
        Runnable task = () -> {
            try {
                Thread.sleep(500);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        };

        Thread t1 = new Thread(group, task, "T1");
        Thread t2 = new Thread(group, task, "T2");
        t1.start();
        t2.start();

        assertTrue(t1.isAlive());
        assertTrue(t2.isAlive());

        t1.join();
        t2.join();

        assertFalse(t1.isAlive());
        assertFalse(t2.isAlive());
    }

    @Test
    public void testMonitorThreadGroupExits() throws InterruptedException {
        Main app = new Main();
        ThreadGroup group = new ThreadGroup("TestGroup");

        Runnable shortTask = () -> {
            try {
                Thread.sleep(300);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        };

        Thread t1 = new Thread(group, shortTask, "T1");
        Thread t2 = new Thread(group, shortTask, "T2");
        t1.start();
        t2.start();

        ByteArrayOutputStream outContent = new ByteArrayOutputStream();
        System.setOut(new PrintStream(outContent));

        Thread monitor = app.monitorThreadGroup(group);
        monitor.join();

        String output = outContent.toString();
        assertTrue(output.contains("All threads have finished. Monitor thread exiting."));
    }

}
